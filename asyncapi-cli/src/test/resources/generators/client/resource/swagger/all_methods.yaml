openapi: "3.0.0"
info:
  version: 1.0.0
  title: OpenApi Petstore
  license:
    name: MIT
servers:
  - url: http://petstore.{host}.io/v1
    description: The production API server
    variables:
      host:
        default: openapi
        description: this value is assigned by the service provider
  - url: https://{subdomain}.swagger.io:{port}/{basePath}
    description: The production API server
    variables:
      subdomain:
        default: petstore
        description: this value is assigned by the service provider
      port:
        enum:
          - '8443'
          - '443'
        default: '443'
      basePath:
        default: v2
tags:
  - name: pets
    description: Pets Tag
  - name: list
    description: List Tag
security:
  - app_id_1: []
  - app_id_2: []
paths:
  /pets:
    get:
      summary: List all pets
      description: Show a list of pets in the system
      operationId: listPets
      tags:
        - pets
        - list
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: An paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
    post:
      summary: Create a pet
      operationId: createPet
      tags:
        - pets
      responses:
        '201':
          description: Null response
    put:
      summary: Update a pet
      operationId: updatePet
      tags:
        - pets
      responses:
        '201':
          description: Null response
    delete:
      summary: Delete a pet
      operationId: deletePet
      responses:
        '200':
          description: Ok response
components:
  securitySchemes:
    app_id_1:
      type: apiKey
      description: API key to authorize requests.
      name: appid1
      in: query
    app_id_2:
      type: apiKey
      description: API key to authorize requests.
      name: appid2
      in: query
  schemas:
    Pet:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        type:
          type: string
    Dog:
      allOf:
        - $ref: "#/components/schemas/Pet"
        - type: object
          properties:
            bark:
              type: boolean
    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
